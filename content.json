[{"title":"vue会议时间选择插件","date":"2023-10-24T07:22:09.000Z","path":"2023/10/24/vue会议时间选择插件/","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169&lt;template&gt; &lt;div class=&quot;range-time-box&quot;&gt; &lt;span :class=&quot;&#123;active:item.checked, reservation: item.status == 1, inUse: item.status == 2&#125;&quot; v-for=&quot;(item,index) in range&quot; :key=&quot;index&quot; @click=&quot;timeRangeChange(item, index)&quot;&gt;&#123;&#123;item.time&#125;&#125;&lt;/span&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt;export default &#123; // 传入的值 model: &#123; // 表明v-model.trim传进来的变量，由props的指定变量接收 prop: &quot;checkList&quot;, event: &quot;input&quot;, &#125;, // 接收的值 props: &#123; checkList: &#123; type: Array, default: () =&gt; [], &#125;, /** * 会议室时间段 * id: 时间段id * status: 0 未预约 1 已预约 2 正在使用 * checked: 是否选中 * time: 时间段 */ timeRange: &#123; type: Array, default: () =&gt; [], &#125;, &#125;, watch: &#123; // 监听外部v-model.trim传进来的，填入到data中的range，防止数据异步从而获取不到的问题 timeRange: &#123; handler() &#123; this.range = this.timeRange; &#125;, immediate: true, deep: true, &#125;, &#125;, data() &#123; return &#123; range: [], // 正在使用 useList: this.timeRange.filter( (item) =&gt; item.status == 2 || item.status == 1 ), // 当前选择项 checkedIndex: [], // 渲染数组 renderingArr: [], &#125;; &#125;, methods: &#123; timeRangeChange(item, index) &#123; // 已预约或正在使用不可选 if (item.status == 1 || item.status == 2) return; // 更改选择 item.checked = !item.checked; // 取消选择 if (!item.checked) &#123; this.checkedIndex = this.checkedIndex.filter((item) =&gt; item !== index); return; &#125; // 清空已选项 if (this.renderingArr.length &gt; 0) &#123; this.reset(); // 选中当前项 item.checked = true; &#125; // 选择时间段开始时间 if (this.checkedIndex.length == 0) &#123; this.checkedIndex.push(index); &#125; else if (this.checkedIndex[0].id != item.id) &#123; // 选择时间段结束时间 this.checkedIndex.push(index); // 渲染数组 this.renderingArr = this.generate(this.checkedIndex); try &#123; // 判断是否包含已预约或正在使用 this.renderingArr.forEach((idx) =&gt; &#123; // 已预约或正在使用不可选 let status = this.range[idx].status; if (status != 0) &#123; throw new Error(status == 1 ? &quot;当前包含已预定时段&quot;:&#x27;当前包含已使用时段&#x27;) &#125; &#125;); &#125; catch (e) &#123; this.$message.warning(e.message); this.checkedIndex.pop(); this.renderingArr = []; item.checked = false return; &#125; // 渲染选择项 let checkedArr = [] this.renderingArr.forEach((idx) =&gt; &#123; this.range[idx].checked = true; checkedArr.push(this.range[idx]) &#125;); this.$emit(&quot;input&quot;, checkedArr); // 暴露出v-model.trim this.$emit(&quot;rangeChange&quot;, checkedArr, this.renderingArr); // 暴露出rangeChange &#125; &#125;, // 重置 reset() &#123; this.range.forEach((item) =&gt; &#123; item.checked = false; &#125;); this.checkedIndex = []; this.renderingArr = []; &#125;, // 生成渲染数组 generate(array) &#123; let start = Math.min.apply(Math, array), end = Math.max.apply(Math, array); var _self = this; var length = end - start + 1; var step = start - 1; return Array.apply(null, &#123; length: length &#125;).map(function (v, i) &#123; step++; return step; &#125;); &#125;, &#125;,&#125;;&lt;/script&gt;&lt;style scoped lang=&quot;scss&quot;&gt;.range-time-box &#123; margin-top: 10px; width: 100%; display: flex; flex-wrap: wrap; span &#123; display: inline-block; width: 64px; height: 32px; line-height: 32px; text-align: center; font-size: 14px; background-color: #67c23a; color: #fff; border-bottom: 1px solid #efefef; border-right: 1px solid #efefef; cursor: pointer; &amp;.active &#123; background-color: #409eff; &#125; &amp;.reservation &#123; background-color: #ffb640; &#125; &amp;.inUse &#123; background-color: rgb(255, 64, 64); &#125; &#125;&#125;&lt;/style&gt;","tags":[{"name":"组件","slug":"组件","permalink":"https://smiles73.github.io/tags/%E7%BB%84%E4%BB%B6/"},{"name":"vue2","slug":"vue2","permalink":"https://smiles73.github.io/tags/vue2/"}]}]